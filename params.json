{"name":"MatrixChain","body":"See this Wikipedia entry: http://en.wikipedia.org/wiki/Matrix_chain_multiplication\r\n\r\n```\r\n$ java MatrixChain 5 6 7 3 2 9 2\r\nA1: 5x6\r\nA2: 6x7\r\nA3: 7x3\r\nA4: 3x2\r\nA5: 2x9\r\nA6: 9x2\r\n(A1,(A2,(A3,(A4,(A5,A6)))))=234\r\n((A1,(A2,(A3,A4))),(A5,A6))=242\r\n(A1,((A2,(A3,A4)),(A5,A6)))=246\r\n(A1,(A2,((A3,A4),(A5,A6))))=250\r\n(A1,((A2,A3),(A4,(A5,A6))))=270\r\n((A1,((A2,A3),A4)),(A5,A6))=278\r\n(A1,(((A2,A3),A4),(A5,A6)))=282\r\n(A1,(A2,(A3,((A4,A5),A6))))=294\r\n((A1,(A2,A3)),(A4,(A5,A6)))=294\r\n(((A1,(A2,A3)),A4),(A5,A6))=302\r\n(A1,((A2,A3),((A4,A5),A6)))=330\r\n((A1,(A2,A3)),((A4,A5),A6))=354\r\n(((A1,(A2,(A3,A4))),A5),A6)=366\r\n((A1,A2),(A3,(A4,(A5,A6))))=370\r\n(((A1,A2),(A3,A4)),(A5,A6))=378\r\n((A1,A2),((A3,A4),(A5,A6)))=386\r\n(((A1,A2),A3),(A4,(A5,A6)))=393\r\n((((A1,A2),A3),A4),(A5,A6))=401\r\n(A1,(((A2,(A3,A4)),A5),A6))=402\r\n(((A1,((A2,A3),A4)),A5),A6)=402\r\n((((A1,(A2,A3)),A4),A5),A6)=426\r\n((A1,A2),(A3,((A4,A5),A6)))=430\r\n(A1,(A2,(((A3,A4),A5),A6)))=438\r\n(A1,((((A2,A3),A4),A5),A6))=438\r\n(((A1,A2),A3),((A4,A5),A6))=453\r\n(((A1,(A2,A3)),(A4,A5)),A6)=495\r\n((((A1,A2),(A3,A4)),A5),A6)=502\r\n(A1,(((A2,A3),(A4,A5)),A6))=510\r\n(A1,(A2,((A3,(A4,A5)),A6)))=513\r\n(((((A1,A2),A3),A4),A5),A6)=525\r\n((A1,A2),(((A3,A4),A5),A6))=574\r\n((A1,((A2,(A3,A4)),A5)),A6)=594\r\n((((A1,A2),A3),(A4,A5)),A6)=594\r\n((A1,(((A2,A3),A4),A5)),A6)=630\r\n((A1,A2),((A3,(A4,A5)),A6))=649\r\n((A1,((A2,A3),(A4,A5))),A6)=702\r\n(A1,((A2,((A3,A4),A5)),A6))=714\r\n(((A1,A2),((A3,A4),A5)),A6)=783\r\n(A1,((A2,(A3,(A4,A5))),A6))=789\r\n(((A1,A2),(A3,(A4,A5))),A6)=858\r\n((A1,(A2,((A3,A4),A5))),A6)=906\r\n((A1,(A2,(A3,(A4,A5)))),A6)=981\r\n```","tagline":"Calculates all possible matrix chain parenthesizations along with number of required multiplications sorted from smallest to largest.","google":"UA-31145998-1","note":"Don't delete this file! It's used internally to help with page regeneration."}